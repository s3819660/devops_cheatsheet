pipeline {
    // run this command to fix jenkins user does not have permissions to /var/lib/jenkins/ chown -R jenkins /var/lib/jenkins/workspace
    agent any

    // app build using java maven -> need install these tools (on Jenkins UI)
    // then also add here as tools need to use
    tools {
        jdk "JDK 17"
    }

    // identify environment variables
    environment {
        // identify an app (that going to build) name
        APP_NAME = "fe-rmit-store"
        RELEASE = "1.0.0"
        DOCKER_USER = "benhuhaudau"
        DOCKER_CREDENTIALS = "dockerhub-credentials"

        IMAGE_NAME = "${DOCKER_USER}/${APP_NAME}"       // !!!!! should be this form either can not push !!!!!
        
        IMAGE_TAG = "${RELEASE}-${env.BUILD_NUMBER}"      // will be updated in another pipeline
    }

    stages {
        stage("Clean Workspace") {
            steps {
                cleanWs()
            }
        }
        
        // checkout code from source code
        stage("Checkout from SCM"){ // usually is Git
            // credentialId - what we named ID when adding credential
            steps {
                git branch: "main", url: "https://github.com/s3819660/COSC2767-RMIT-Store.git"
            }
        }
        
        /*
        stage('Copy Project') {
            steps {
                dir('/var/lib/jenkins/workspace') {
                    sh 'rsync -av --progress TestRmitStore ~/ --exclude .git'
                }
            }
        }
        */
        
        
        stage('Install npm Dependencies') {
            steps {
                dir('/var/lib/jenkins/workspace/TestRmitStore/client') {
                    sh 'npm install'
                }
            }
        }
        
        /*
        stage('Build Docker Image') {
            steps {
                dir('/var/lib/jenkins/workspace/TestRmitStore/client') {
                    sh 'docker build -t fe-rmit-store .'
                }
            }
        }
        */

        // create Docker image -> push to Docker Hub -> pull back to build image
        stage("Build & Push Docker image"){
            steps {
                script {

                    docker_image = docker.build("${IMAGE_NAME}", "/var/lib/jenkins/workspace/TestRmitStore/client")

                    // ------------- can be in a separate registry auth if different registry ------------------------
                    docker.withRegistry('', DOCKER_CREDENTIALS) {
                    // .push() push image with a specific tag
                        docker_image.push("${IMAGE_TAG}")

                        // latest - a convention in Docker that points to the most recent version of the image
                        docker_image.push("latest")     // helpful for finding d most up-to-date image without specifying a version
                    }
                }
            }
        }
    }
}